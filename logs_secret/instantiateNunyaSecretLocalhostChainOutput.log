1:51AM INF Timed out dur=4974.505652 height=404 module=consensus round=0 step=RoundStepNewHeight
DEBUG [secret_enclave::validator_set] decoded validator set hash: Hash::Sha256(A0EAB440B6AA23429850E342ED7E678A0B1041F72877C951CA760183279F8EA9)
Validating proposal  404 with random:  b1fb2ab14b71ece901d39439420e26b9d35290da46c6fd34c5056f5b4473114a4fcef26cb28458c0520aad70ca714d83 proof:  6f8ba8aefb45bde299da242f2aba777e033da2c4c5b8a9e94d01dbd21a461710 hash:  10f84a83731d6abfa673080d6eeb5387dbd2e2e449ab39a08f330808f30ffc4b
DEBUG [secret_enclave::validator_set] decoded validator set hash: Hash::Sha256(A0EAB440B6AA23429850E342ED7E678A0B1041F72877C951CA760183279F8EA9)
Validating proposal  404 with random:  6d139a967c5052b7b830ea1c1670acfa93b1c39b04b3f3b72e8e75012e7ab7d656e45af1af720f1e497843d8bb04a34e proof:  6ff4a6a45d7bcf9da209ce4e220d466ef35fac85171d7aa616e2c6a45fdfb8eb hash:  10f84a83731d6abfa673080d6eeb5387dbd2e2e449ab39a08f330808f30ffc4b
1:51AM INF received proposal module=consensus proposal="Proposal{404/0 (DBBFB4F32DE6D0E4847E2B7465AD2AB564A4655AAF53135D0A0DD2F1C7588E44:1:37DA9373983E, -1) DBE30599BA7B @ 2024-12-17T01:51:30.613626835Z}" proposer=D4C32BDA4D8C81E9F41B7318F62C89D60C72D72D
1:51AM INF received complete proposal block hash=DBBFB4F32DE6D0E4847E2B7465AD2AB564A4655AAF53135D0A0DD2F1C7588E44 height=404 module=consensus
1:51AM INF finalizing commit of block hash=DBBFB4F32DE6D0E4847E2B7465AD2AB564A4655AAF53135D0A0DD2F1C7588E44 height=404 module=consensus num_txs=1 root=EB202C571B4B018F9423B726530AF23C1C7C84D52B04665485EE72C749B6F665
1:51AM INF Submitted validator set to enclave for height 404, val set hash: a0eab440b6aa23429850e342ed7e678a0b1041f72877c951ca760183279f8ea9 module=state
TRACE [enclave_utils::random] Height: 404
Random: [109, 19, 154, 150, 124, 80, 82, 183, 184, 48, 234, 28, 22, 112, 172, 250, 147, 177, 195, 155, 4, 179, 243, 183, 46, 142, 117, 1, 46, 122, 183, 214, 86, 228, 90, 241, 175, 114, 15, 30, 73, 120, 67, 216, 187, 4, 163, 78]
Apphash: [235, 32, 44, 87, 27, 75, 1, 143, 148, 35, 183, 38, 83, 10, 242, 60, 28, 124, 132, 213, 43, 4, 102, 84, 133, 238, 114, 199, 73, 182, 246, 101]
DEBUG [block_verifier::verify::random] Encrypted random slice len: 48
DEBUG [block_verifier::submit_block_signatures] Done verifying block height: 404
1:51AM INF Setting random: b4a8cb0a0529b4fe0dc8e5435e99559119dbd64006f83dc880e6d6c299267699 module=server
TRACE [enclave_contract_engine::contract_operations] Starting init
DEBUG [enclave_contract_engine::contract_operations] ******************** init RUNNING WITH CODE: [63, 38, 3c, a7, e1, 1c, 16, a2, 48, ec, 7, ac, 6e, 12, 94, 9e, a1, bc, 7a, 70, e3, 30, 77, c3, 6, f7, be, 75, 38, 8c, a5, 4b]
TRACE [enclave_contract_engine::contract_operations] base env: BaseEnv(Env { block: BlockInfo { height: 404, time: 1734400285563952179, chain_id: "secretdev-1", random: Some(Binary([180, 168, 203, 10, 5, 41, 180, 254, 13, 200, 229, 67, 94, 153, 85, 145, 25, 219, 214, 64, 6, 248, 61, 200, 128, 230, 214, 194, 153, 38, 118, 153])) }, message: MessageInfo { sender: HumanAddr("secret1ap26qrlp8mcq2pg6r47w43l0y8zkqm8a450s03"), sent_funds: [] }, contract: ContractInfo { address: HumanAddr("secret1gyruqan6yxf0q423t8z5zce3x7np35uw8s8wqc") }, contract_key: Some(ContractKey { og_contract_key: None, current_contract_key: None, current_contract_key_proof: None }), contract_code_hash: "", transaction: Some(TransactionInfo { index: 0, hash: "775F103EB8FDD0D056494D42D99C51377546807BB67B29F005D1B6B7BDA2404F" }) })
TRACE [enclave_contract_engine::contract_operations] env.query_depth: EnvWithQD { query_depth: 1 }
TRACE [enclave_contract_engine::contract_validation] contract key: "35f933aacdc3e70d744fa4cf59b4345ec6aa20eb6d4d569587f8c6e1391106e38c41d448b836a3a4312565f949686462341d0966ea2e96d26ba9fdb25ddd193e"
DEBUG [enclave_contract_engine::types] SecretMessage::from_slice nonce = [144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197] pubkey = "8bc809b04a153c5bd22341c9fdb26f37e601d30001f590fcfed2cc47de58154c"
DEBUG [enclave_contract_engine::contract_validation] Verifying message signatures for: SigInfo { tx_bytes: Binary([10, 198, 4, 10, 195, 4, 10, 46, 47, 115, 101, 99, 114, 101, 116, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 144, 4, 10, 20, 232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253, 24, 2, 34, 22, 83, 110, 97, 107, 101, 80, 97, 116, 104, 32, 69, 110, 99, 114, 121, 112, 116, 32, 53, 57, 48, 51, 42, 221, 3, 144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197, 139, 200, 9, 176, 74, 21, 60, 91, 210, 35, 65, 201, 253, 178, 111, 55, 230, 1, 211, 0, 1, 245, 144, 252, 254, 210, 204, 71, 222, 88, 21, 76, 154, 91, 154, 129, 218, 8, 243, 120, 103, 247, 25, 193, 151, 28, 244, 8, 157, 232, 27, 225, 113, 81, 201, 221, 178, 108, 83, 51, 245, 178, 47, 247, 193, 31, 82, 133, 191, 138, 131, 182, 140, 241, 241, 98, 100, 184, 36, 242, 65, 160, 240, 120, 50, 240, 249, 130, 175, 252, 202, 113, 99, 197, 138, 108, 104, 195, 44, 53, 67, 116, 139, 77, 210, 173, 119, 63, 22, 196, 146, 241, 91, 248, 76, 47, 18, 160, 160, 54, 13, 73, 119, 50, 227, 40, 108, 195, 248, 249, 221, 87, 95, 145, 223, 140, 39, 245, 145, 152, 81, 171, 22, 77, 125, 252, 176, 245, 240, 197, 55, 75, 157, 46, 105, 229, 93, 120, 42, 78, 157, 44, 241, 72, 132, 184, 11, 76, 52, 34, 193, 180, 141, 83, 131, 21, 155, 224, 65, 219, 28, 9, 209, 188, 33, 213, 56, 33, 125, 148, 46, 188, 63, 76, 23, 158, 107, 20, 165, 206, 37, 210, 48, 38, 141, 182, 255, 56, 59, 140, 57, 205, 174, 238, 165, 172, 228, 85, 192, 73, 232, 101, 149, 32, 9, 115, 200, 87, 41, 105, 211, 50, 70, 91, 195, 202, 212, 125, 191, 245, 211, 160, 129, 68, 134, 221, 134, 234, 11, 154, 184, 71, 196, 18, 31, 0, 117, 175, 217, 222, 34, 45, 158, 133, 177, 87, 29, 61, 96, 23, 191, 83, 247, 69, 221, 158, 192, 176, 61, 74, 123, 23, 201, 36, 215, 208, 6, 243, 32, 82, 247, 217, 127, 120, 205, 96, 56, 214, 82, 104, 157, 119, 12, 197, 190, 187, 209, 242, 5, 183, 30, 158, 125, 184, 74, 249, 24, 100, 52, 253, 211, 246, 200, 16, 106, 28, 116, 99, 206, 115, 128, 32, 206, 162, 58, 243, 89, 197, 140, 24, 90, 139, 129, 79, 69, 4, 56, 239, 58, 85, 221, 137, 167, 38, 27, 243, 196, 158, 179, 11, 11, 230, 58, 2, 201, 67, 254, 100, 241, 185, 159, 57, 233, 39, 175, 223, 22, 164, 180, 33, 29, 56, 104, 222, 153, 4, 74, 211, 157, 17, 66, 66, 176, 110, 186, 239, 87, 235, 37, 138, 171, 199, 174, 63, 73, 53, 171, 144, 238, 192, 154, 254, 250, 172, 166, 129, 235, 209, 4, 200, 102, 248, 163, 190, 145, 133, 84, 179, 199, 128, 133, 43, 155, 239, 92, 41, 51, 167, 180, 248, 112, 126, 32, 60, 7, 18, 154, 1, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 78, 232, 36, 159, 103, 225, 54, 19, 156, 62, 217, 74, 214, 50, 136, 246, 193, 222, 69, 206, 102, 250, 136, 50, 71, 33, 26, 105, 143, 68, 12, 223, 18, 4, 10, 2, 8, 1, 24, 5, 18, 70, 10, 16, 10, 5, 117, 115, 99, 114, 116, 18, 7, 53, 48, 48, 48, 48, 48, 48, 16, 192, 150, 177, 2, 34, 45, 115, 101, 99, 114, 101, 116, 49, 97, 112, 50, 54, 113, 114, 108, 112, 56, 109, 99, 113, 50, 112, 103, 54, 114, 52, 55, 119, 52, 51, 108, 48, 121, 56, 122, 107, 113, 109, 56, 97, 52, 53, 48, 115, 48, 51, 26, 64, 224, 219, 108, 175, 41, 33, 104, 112, 167, 177, 165, 0, 2, 96, 114, 254, 243, 34, 227, 16, 80, 118, 91, 70, 138, 232, 156, 170, 132, 37, 247, 212, 127, 248, 99, 76, 33, 223, 253, 90, 251, 102, 67, 188, 240, 88, 101, 158, 58, 95, 148, 51, 86, 82, 202, 242, 116, 48, 173, 235, 81, 118, 16, 242]), sign_bytes: Binary([10, 198, 4, 10, 195, 4, 10, 46, 47, 115, 101, 99, 114, 101, 116, 46, 99, 111, 109, 112, 117, 116, 101, 46, 118, 49, 98, 101, 116, 97, 49, 46, 77, 115, 103, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 67, 111, 110, 116, 114, 97, 99, 116, 18, 144, 4, 10, 20, 232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253, 24, 2, 34, 22, 83, 110, 97, 107, 101, 80, 97, 116, 104, 32, 69, 110, 99, 114, 121, 112, 116, 32, 53, 57, 48, 51, 42, 221, 3, 144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197, 139, 200, 9, 176, 74, 21, 60, 91, 210, 35, 65, 201, 253, 178, 111, 55, 230, 1, 211, 0, 1, 245, 144, 252, 254, 210, 204, 71, 222, 88, 21, 76, 154, 91, 154, 129, 218, 8, 243, 120, 103, 247, 25, 193, 151, 28, 244, 8, 157, 232, 27, 225, 113, 81, 201, 221, 178, 108, 83, 51, 245, 178, 47, 247, 193, 31, 82, 133, 191, 138, 131, 182, 140, 241, 241, 98, 100, 184, 36, 242, 65, 160, 240, 120, 50, 240, 249, 130, 175, 252, 202, 113, 99, 197, 138, 108, 104, 195, 44, 53, 67, 116, 139, 77, 210, 173, 119, 63, 22, 196, 146, 241, 91, 248, 76, 47, 18, 160, 160, 54, 13, 73, 119, 50, 227, 40, 108, 195, 248, 249, 221, 87, 95, 145, 223, 140, 39, 245, 145, 152, 81, 171, 22, 77, 125, 252, 176, 245, 240, 197, 55, 75, 157, 46, 105, 229, 93, 120, 42, 78, 157, 44, 241, 72, 132, 184, 11, 76, 52, 34, 193, 180, 141, 83, 131, 21, 155, 224, 65, 219, 28, 9, 209, 188, 33, 213, 56, 33, 125, 148, 46, 188, 63, 76, 23, 158, 107, 20, 165, 206, 37, 210, 48, 38, 141, 182, 255, 56, 59, 140, 57, 205, 174, 238, 165, 172, 228, 85, 192, 73, 232, 101, 149, 32, 9, 115, 200, 87, 41, 105, 211, 50, 70, 91, 195, 202, 212, 125, 191, 245, 211, 160, 129, 68, 134, 221, 134, 234, 11, 154, 184, 71, 196, 18, 31, 0, 117, 175, 217, 222, 34, 45, 158, 133, 177, 87, 29, 61, 96, 23, 191, 83, 247, 69, 221, 158, 192, 176, 61, 74, 123, 23, 201, 36, 215, 208, 6, 243, 32, 82, 247, 217, 127, 120, 205, 96, 56, 214, 82, 104, 157, 119, 12, 197, 190, 187, 209, 242, 5, 183, 30, 158, 125, 184, 74, 249, 24, 100, 52, 253, 211, 246, 200, 16, 106, 28, 116, 99, 206, 115, 128, 32, 206, 162, 58, 243, 89, 197, 140, 24, 90, 139, 129, 79, 69, 4, 56, 239, 58, 85, 221, 137, 167, 38, 27, 243, 196, 158, 179, 11, 11, 230, 58, 2, 201, 67, 254, 100, 241, 185, 159, 57, 233, 39, 175, 223, 22, 164, 180, 33, 29, 56, 104, 222, 153, 4, 74, 211, 157, 17, 66, 66, 176, 110, 186, 239, 87, 235, 37, 138, 171, 199, 174, 63, 73, 53, 171, 144, 238, 192, 154, 254, 250, 172, 166, 129, 235, 209, 4, 200, 102, 248, 163, 190, 145, 133, 84, 179, 199, 128, 133, 43, 155, 239, 92, 41, 51, 167, 180, 248, 112, 126, 32, 60, 7, 18, 154, 1, 10, 80, 10, 70, 10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 78, 232, 36, 159, 103, 225, 54, 19, 156, 62, 217, 74, 214, 50, 136, 246, 193, 222, 69, 206, 102, 250, 136, 50, 71, 33, 26, 105, 143, 68, 12, 223, 18, 4, 10, 2, 8, 1, 24, 5, 18, 70, 10, 16, 10, 5, 117, 115, 99, 114, 116, 18, 7, 53, 48, 48, 48, 48, 48, 48, 16, 192, 150, 177, 2, 34, 45, 115, 101, 99, 114, 101, 116, 49, 97, 112, 50, 54, 113, 114, 108, 112, 56, 109, 99, 113, 50, 112, 103, 54, 114, 52, 55, 119, 52, 51, 108, 48, 121, 56, 122, 107, 113, 109, 56, 97, 52, 53, 48, 115, 48, 51, 26, 11, 115, 101, 99, 114, 101, 116, 100, 101, 118, 45, 49, 32, 1]), sign_mode: SIGN_MODE_DIRECT, mode_info: Binary([10, 68, 8, 1, 18, 64, 224, 219, 108, 175, 41, 33, 104, 112, 167, 177, 165, 0, 2, 96, 114, 254, 243, 34, 227, 16, 80, 118, 91, 70, 138, 232, 156, 170, 132, 37, 247, 212, 127, 248, 99, 76, 33, 223, 253, 90, 251, 102, 67, 188, 240, 88, 101, 158, 58, 95, 148, 51, 86, 82, 202, 242, 116, 48, 173, 235, 81, 118, 16, 242]), public_key: Binary([10, 31, 47, 99, 111, 115, 109, 111, 115, 46, 99, 114, 121, 112, 116, 111, 46, 115, 101, 99, 112, 50, 53, 54, 107, 49, 46, 80, 117, 98, 75, 101, 121, 18, 35, 10, 33, 3, 78, 232, 36, 159, 103, 225, 54, 19, 156, 62, 217, 74, 214, 50, 136, 246, 193, 222, 69, 206, 102, 250, 136, 50, 71, 33, 26, 105, 143, 68, 12, 223]), signature: Binary([224, 219, 108, 175, 41, 33, 104, 112, 167, 177, 165, 0, 2, 96, 114, 254, 243, 34, 227, 16, 80, 118, 91, 70, 138, 232, 156, 170, 132, 37, 247, 212, 127, 248, 99, 76, 33, 223, 253, 90, 251, 102, 67, 188, 240, 88, 101, 158, 58, 95, 148, 51, 86, 82, 202, 242, 116, 48, 173, 235, 81, 118, 16, 242]), callback_sig: None }
TRACE [enclave_cosmos_types::types] try_parse_instantiate sender: len=20 val=[232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253]
TRACE [enclave_contract_engine::contract_validation] sign doc: SignDoc { body: TxBody { messages: [MsgInstantiateContract { sender: CanonicalAddr(Binary([232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253])), init_msg: [144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197, 139, 200, 9, 176, 74, 21, 60, 91, 210, 35, 65, 201, 253, 178, 111, 55, 230, 1, 211, 0, 1, 245, 144, 252, 254, 210, 204, 71, 222, 88, 21, 76, 154, 91, 154, 129, 218, 8, 243, 120, 103, 247, 25, 193, 151, 28, 244, 8, 157, 232, 27, 225, 113, 81, 201, 221, 178, 108, 83, 51, 245, 178, 47, 247, 193, 31, 82, 133, 191, 138, 131, 182, 140, 241, 241, 98, 100, 184, 36, 242, 65, 160, 240, 120, 50, 240, 249, 130, 175, 252, 202, 113, 99, 197, 138, 108, 104, 195, 44, 53, 67, 116, 139, 77, 210, 173, 119, 63, 22, 196, 146, 241, 91, 248, 76, 47, 18, 160, 160, 54, 13, 73, 119, 50, 227, 40, 108, 195, 248, 249, 221, 87, 95, 145, 223, 140, 39, 245, 145, 152, 81, 171, 22, 77, 125, 252, 176, 245, 240, 197, 55, 75, 157, 46, 105, 229, 93, 120, 42, 78, 157, 44, 241, 72, 132, 184, 11, 76, 52, 34, 193, 180, 141, 83, 131, 21, 155, 224, 65, 219, 28, 9, 209, 188, 33, 213, 56, 33, 125, 148, 46, 188, 63, 76, 23, 158, 107, 20, 165, 206, 37, 210, 48, 38, 141, 182, 255, 56, 59, 140, 57, 205, 174, 238, 165, 172, 228, 85, 192, 73, 232, 101, 149, 32, 9, 115, 200, 87, 41, 105, 211, 50, 70, 91, 195, 202, 212, 125, 191, 245, 211, 160, 129, 68, 134, 221, 134, 234, 11, 154, 184, 71, 196, 18, 31, 0, 117, 175, 217, 222, 34, 45, 158, 133, 177, 87, 29, 61, 96, 23, 191, 83, 247, 69, 221, 158, 192, 176, 61, 74, 123, 23, 201, 36, 215, 208, 6, 243, 32, 82, 247, 217, 127, 120, 205, 96, 56, 214, 82, 104, 157, 119, 12, 197, 190, 187, 209, 242, 5, 183, 30, 158, 125, 184, 74, 249, 24, 100, 52, 253, 211, 246, 200, 16, 106, 28, 116, 99, 206, 115, 128, 32, 206, 162, 58, 243, 89, 197, 140, 24, 90, 139, 129, 79, 69, 4, 56, 239, 58, 85, 221, 137, 167, 38, 27, 243, 196, 158, 179, 11, 11, 230, 58, 2, 201, 67, 254, 100, 241, 185, 159, 57, 233, 39, 175, 223, 22, 164, 180, 33, 29, 56, 104, 222, 153, 4, 74, 211, 157, 17, 66, 66, 176, 110, 186, 239, 87, 235, 37, 138, 171, 199, 174, 63, 73, 53, 171, 144, 238, 192, 154, 254, 250, 172, 166, 129, 235, 209, 4, 200, 102, 248, 163, 190, 145, 133, 84, 179, 199, 128, 133, 43, 155, 239, 92, 41, 51, 167, 180, 248, 112, 126, 32, 60, 7], init_funds: [], label: "SnakePath Encrypt 5903", admin: HumanAddr(""), code_id: 2 }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 78, 232, 36, 159, 103, 225, 54, 19, 156, 62, 217, 74, 214, 50, 136, 246, 193, 222, 69, 206, 102, 250, 136, 50, 71, 33, 26, 105, 143, 68, 12, 223])), sequence: 5 }], fee: () }, chain_id: "secretdev-1", account_number: 1 }
TRACE [enclave_crypto::secp256k1] successfully verified this signature: [224, 219, 108, 175, 41, 33, 104, 112, 167, 177, 165, 0, 2, 96, 114, 254, 243, 34, 227, 16, 80, 118, 91, 70, 138, 232, 156, 170, 132, 37, 247, 212, 127, 248, 99, 76, 33, 223, 253, 90, 251, 102, 67, 188, 240, 88, 101, 158, 58, 95, 148, 51, 86, 82, 202, 242, 116, 48, 173, 235, 81, 118, 16, 242]
TRACE [enclave_cosmos_types::types] try_parse_instantiate sender: len=20 val=[232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253]
TRACE [enclave_contract_engine::contract_validation] direct sign doc: SignDoc { body: TxBody { messages: [MsgInstantiateContract { sender: CanonicalAddr(Binary([232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253])), init_msg: [144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197, 139, 200, 9, 176, 74, 21, 60, 91, 210, 35, 65, 201, 253, 178, 111, 55, 230, 1, 211, 0, 1, 245, 144, 252, 254, 210, 204, 71, 222, 88, 21, 76, 154, 91, 154, 129, 218, 8, 243, 120, 103, 247, 25, 193, 151, 28, 244, 8, 157, 232, 27, 225, 113, 81, 201, 221, 178, 108, 83, 51, 245, 178, 47, 247, 193, 31, 82, 133, 191, 138, 131, 182, 140, 241, 241, 98, 100, 184, 36, 242, 65, 160, 240, 120, 50, 240, 249, 130, 175, 252, 202, 113, 99, 197, 138, 108, 104, 195, 44, 53, 67, 116, 139, 77, 210, 173, 119, 63, 22, 196, 146, 241, 91, 248, 76, 47, 18, 160, 160, 54, 13, 73, 119, 50, 227, 40, 108, 195, 248, 249, 221, 87, 95, 145, 223, 140, 39, 245, 145, 152, 81, 171, 22, 77, 125, 252, 176, 245, 240, 197, 55, 75, 157, 46, 105, 229, 93, 120, 42, 78, 157, 44, 241, 72, 132, 184, 11, 76, 52, 34, 193, 180, 141, 83, 131, 21, 155, 224, 65, 219, 28, 9, 209, 188, 33, 213, 56, 33, 125, 148, 46, 188, 63, 76, 23, 158, 107, 20, 165, 206, 37, 210, 48, 38, 141, 182, 255, 56, 59, 140, 57, 205, 174, 238, 165, 172, 228, 85, 192, 73, 232, 101, 149, 32, 9, 115, 200, 87, 41, 105, 211, 50, 70, 91, 195, 202, 212, 125, 191, 245, 211, 160, 129, 68, 134, 221, 134, 234, 11, 154, 184, 71, 196, 18, 31, 0, 117, 175, 217, 222, 34, 45, 158, 133, 177, 87, 29, 61, 96, 23, 191, 83, 247, 69, 221, 158, 192, 176, 61, 74, 123, 23, 201, 36, 215, 208, 6, 243, 32, 82, 247, 217, 127, 120, 205, 96, 56, 214, 82, 104, 157, 119, 12, 197, 190, 187, 209, 242, 5, 183, 30, 158, 125, 184, 74, 249, 24, 100, 52, 253, 211, 246, 200, 16, 106, 28, 116, 99, 206, 115, 128, 32, 206, 162, 58, 243, 89, 197, 140, 24, 90, 139, 129, 79, 69, 4, 56, 239, 58, 85, 221, 137, 167, 38, 27, 243, 196, 158, 179, 11, 11, 230, 58, 2, 201, 67, 254, 100, 241, 185, 159, 57, 233, 39, 175, 223, 22, 164, 180, 33, 29, 56, 104, 222, 153, 4, 74, 211, 157, 17, 66, 66, 176, 110, 186, 239, 87, 235, 37, 138, 171, 199, 174, 63, 73, 53, 171, 144, 238, 192, 154, 254, 250, 172, 166, 129, 235, 209, 4, 200, 102, 248, 163, 190, 145, 133, 84, 179, 199, 128, 133, 43, 155, 239, 92, 41, 51, 167, 180, 248, 112, 126, 32, 60, 7], init_funds: [], label: "SnakePath Encrypt 5903", admin: HumanAddr(""), code_id: 2 }], memo: (), timeout_height: () }, auth_info: AuthInfo { signer_infos: [SignerInfo { public_key: Secp256k1(Secp256k1PubKey([3, 78, 232, 36, 159, 103, 225, 54, 19, 156, 62, 217, 74, 214, 50, 136, 246, 193, 222, 69, 206, 102, 250, 136, 50, 71, 33, 26, 105, 143, 68, 12, 223])), sequence: 5 }], fee: () }, chain_id: "secretdev-1", account_number: 1 }
TRACE [enclave_contract_engine::contract_validation] Verifying tx_bytes against sign_bytes...
TRACE [enclave_cosmos_types::types] try_parse_instantiate sender: len=20 val=[232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253]
INFO  [enclave_contract_engine::contract_validation] Verifying sdk message against wasm input...
TRACE [enclave_contract_engine::input_validation::msg_validation] verify_and_get_sdk_msg: [MsgInstantiateContract { sender: CanonicalAddr(Binary([232, 85, 160, 15, 225, 62, 240, 5, 5, 26, 29, 124, 234, 199, 239, 33, 197, 96, 108, 253])), init_msg: [144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197, 139, 200, 9, 176, 74, 21, 60, 91, 210, 35, 65, 201, 253, 178, 111, 55, 230, 1, 211, 0, 1, 245, 144, 252, 254, 210, 204, 71, 222, 88, 21, 76, 154, 91, 154, 129, 218, 8, 243, 120, 103, 247, 25, 193, 151, 28, 244, 8, 157, 232, 27, 225, 113, 81, 201, 221, 178, 108, 83, 51, 245, 178, 47, 247, 193, 31, 82, 133, 191, 138, 131, 182, 140, 241, 241, 98, 100, 184, 36, 242, 65, 160, 240, 120, 50, 240, 249, 130, 175, 252, 202, 113, 99, 197, 138, 108, 104, 195, 44, 53, 67, 116, 139, 77, 210, 173, 119, 63, 22, 196, 146, 241, 91, 248, 76, 47, 18, 160, 160, 54, 13, 73, 119, 50, 227, 40, 108, 195, 248, 249, 221, 87, 95, 145, 223, 140, 39, 245, 145, 152, 81, 171, 22, 77, 125, 252, 176, 245, 240, 197, 55, 75, 157, 46, 105, 229, 93, 120, 42, 78, 157, 44, 241, 72, 132, 184, 11, 76, 52, 34, 193, 180, 141, 83, 131, 21, 155, 224, 65, 219, 28, 9, 209, 188, 33, 213, 56, 33, 125, 148, 46, 188, 63, 76, 23, 158, 107, 20, 165, 206, 37, 210, 48, 38, 141, 182, 255, 56, 59, 140, 57, 205, 174, 238, 165, 172, 228, 85, 192, 73, 232, 101, 149, 32, 9, 115, 200, 87, 41, 105, 211, 50, 70, 91, 195, 202, 212, 125, 191, 245, 211, 160, 129, 68, 134, 221, 134, 234, 11, 154, 184, 71, 196, 18, 31, 0, 117, 175, 217, 222, 34, 45, 158, 133, 177, 87, 29, 61, 96, 23, 191, 83, 247, 69, 221, 158, 192, 176, 61, 74, 123, 23, 201, 36, 215, 208, 6, 243, 32, 82, 247, 217, 127, 120, 205, 96, 56, 214, 82, 104, 157, 119, 12, 197, 190, 187, 209, 242, 5, 183, 30, 158, 125, 184, 74, 249, 24, 100, 52, 253, 211, 246, 200, 16, 106, 28, 116, 99, 206, 115, 128, 32, 206, 162, 58, 243, 89, 197, 140, 24, 90, 139, 129, 79, 69, 4, 56, 239, 58, 85, 221, 137, 167, 38, 27, 243, 196, 158, 179, 11, 11, 230, 58, 2, 201, 67, 254, 100, 241, 185, 159, 57, 233, 39, 175, 223, 22, 164, 180, 33, 29, 56, 104, 222, 153, 4, 74, 211, 157, 17, 66, 66, 176, 110, 186, 239, 87, 235, 37, 138, 171, 199, 174, 63, 73, 53, 171, 144, 238, 192, 154, 254, 250, 172, 166, 129, 235, 209, 4, 200, 102, 248, 163, 190, 145, 133, 84, 179, 199, 128, 133, 43, 155, 239, 92, 41, 51, 167, 180, 248, 112, 126, 32, 60, 7], init_funds: [], label: "SnakePath Encrypt 5903", admin: HumanAddr(""), code_id: 2 }]
INFO  [enclave_contract_engine::contract_validation] Verifying message in signed block...
TRACE [enclave_contract_engine::contract_validation] input tx_sign_bytes: "0ac6040ac3040a2e2f7365637265742e636f6d707574652e763162657461312e4d7367496e7374616e7469617465436f6e74726163741290040a14e855a00fe13ef005051a1d7ceac7ef21c5606cfd18022216536e616b655061746820456e637279707420353930332add039011be3f84e06af959f9bcdf4553ecb13b82b3b6fd469aa8ff3bf6d910a000c58bc809b04a153c5bd22341c9fdb26f37e601d30001f590fcfed2cc47de58154c9a5b9a81da08f37867f719c1971cf4089de81be17151c9ddb26c5333f5b22ff7c11f5285bf8a83b68cf1f16264b824f241a0f07832f0f982affcca7163c58a6c68c32c3543748b4dd2ad773f16c492f15bf84c2f12a0a0360d497732e3286cc3f8f9dd575f91df8c27f5919851ab164d7dfcb0f5f0c5374b9d2e69e55d782a4e9d2cf14884b80b4c3422c1b48d5383159be041db1c09d1bc21d538217d942ebc3f4c179e6b14a5ce25d230268db6ff383b8c39cdaeeea5ace455c049e86595200973c8572969d332465bc3cad47dbff5d3a0814486dd86ea0b9ab847c4121f0075afd9de222d9e85b1571d3d6017bf53f745dd9ec0b03d4a7b17c924d7d006f32052f7d97f78cd6038d652689d770cc5bebbd1f205b71e9e7db84af9186434fdd3f6c8106a1c7463ce738020cea23af359c58c185a8b814f450438ef3a55dd89a7261bf3c49eb30b0be63a02c943fe64f1b99f39e927afdf16a4b4211d3868de99044ad39d114242b06ebaef57eb258aabc7ae3f4935ab90eec09afefaaca681ebd104c866f8a3be918554b3c780852b9bef5c2933a7b4f8707e203c07129a010a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21034ee8249f67e136139c3ed94ad63288f6c1de45ce66fa883247211a698f440cdf12040a020801180512460a100a05757363727412073530303030303010c096b102222d736563726574316170323671726c70386d6371327067367234377734336c3079387a6b716d38613435307330331a40e0db6caf29216870a7b1a500026072fef322e31050765b468ae89caa8425f7d47ff8634c21dffd5afb6643bcf058659e3a5f94335652caf27430adeb517610f2"
TRACE [enclave_contract_engine::contract_validation] light client msg: "0a14e855a00fe13ef005051a1d7ceac7ef21c5606cfd18022216536e616b655061746820456e637279707420353930332add039011be3f84e06af959f9bcdf4553ecb13b82b3b6fd469aa8ff3bf6d910a000c58bc809b04a153c5bd22341c9fdb26f37e601d30001f590fcfed2cc47de58154c9a5b9a81da08f37867f719c1971cf4089de81be17151c9ddb26c5333f5b22ff7c11f5285bf8a83b68cf1f16264b824f241a0f07832f0f982affcca7163c58a6c68c32c3543748b4dd2ad773f16c492f15bf84c2f12a0a0360d497732e3286cc3f8f9dd575f91df8c27f5919851ab164d7dfcb0f5f0c5374b9d2e69e55d782a4e9d2cf14884b80b4c3422c1b48d5383159be041db1c09d1bc21d538217d942ebc3f4c179e6b14a5ce25d230268db6ff383b8c39cdaeeea5ace455c049e86595200973c8572969d332465bc3cad47dbff5d3a0814486dd86ea0b9ab847c4121f0075afd9de222d9e85b1571d3d6017bf53f745dd9ec0b03d4a7b17c924d7d006f32052f7d97f78cd6038d652689d770cc5bebbd1f205b71e9e7db84af9186434fdd3f6c8106a1c7463ce738020cea23af359c58c185a8b814f450438ef3a55dd89a7261bf3c49eb30b0be63a02c943fe64f1b99f39e927afdf16a4b4211d3868de99044ad39d114242b06ebaef57eb258aabc7ae3f4935ab90eec09afefaaca681ebd104c866f8a3be918554b3c780852b9bef5c2933a7b4f8707e203c07"
INFO  [enclave_contract_engine::contract_validation] Verifying message sender...
INFO  [enclave_contract_engine::contract_validation] Verifying contract address...
INFO  [enclave_contract_engine::contract_validation] Verifying sent funds...
INFO  [enclave_contract_engine::contract_validation] Parameters verified successfully
TRACE [enclave_contract_engine::types] input before decryption: "mluagdoI83hn9xnBlxz0CJ3oG+FxUcndsmxTM/WyL/fBH1KFv4qDtozx8WJkuCTyQaDweDLw+YKv/MpxY8WKbGjDLDVDdItN0q13PxbEkvFb+EwvEqCgNg1JdzLjKGzD+PndV1+R34wn9ZGYUasWTX38sPXwxTdLnS5p5V14Kk6dLPFIhLgLTDQiwbSNU4MVm+BB2xwJ0bwh1TghfZQuvD9MF55rFKXOJdIwJo22/zg7jDnNru6lrORVwEnoZZUgCXPIVylp0zJGW8PK1H2/9dOggUSG3YbqC5q4R8QSHwB1r9neIi2ehbFXHT1gF79T90XdnsCwPUp7F8kk19AG8yBS99l/eM1gONZSaJ13DMW+u9HyBbcenn24SvkYZDT90/bIEGocdGPOc4AgzqI681nFjBhai4FPRQQ47zpV3YmnJhvzxJ6zCwvmOgLJQ/5k8bmfOeknr98WpLQhHTho3pkEStOdEUJCsG6671frJYqrx64/STWrkO7Amv76rKaB69EEyGb4o76RhVSzx4CFK5vvXCkzp7T4cH4gPAc="
TRACE [enclave_contract_engine::types] input after decryption: "63383ca7e11c16a248ec07ac6e12949ea1bc7a70e33077c306f7be75388ca54b{\"gateway_address\":\"secret1mfk7n6mc2cg6lznujmeckdh4x0a5ezf6hx6y8q\",\"gateway_hash\":\"97653655266e70774ab8f0bf2ee2c17ff4a7f47d2e2fd477c69b52476841277b\",\"gateway_key\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"nunya_business_contract_address\":\"0xAFFF311821C3F3AF863C7103BB17BDC1Ba04603D\"}"
TRACE [enclave_contract_engine::wasm3::module_cache] fetching module from cache
TRACE [enclave_contract_engine::wasm3::module_cache] cache is enabled
TRACE [enclave_contract_engine::wasm3::module_cache] peeking in cache
TRACE [enclave_contract_engine::wasm3::module_cache] code not found in cache! analyzing now
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 0 }, module: "env", name: "db_read", kind: Function(Id { idx: 0 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 1 }, module: "env", name: "db_write", kind: Function(Id { idx: 1 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 2 }, module: "env", name: "db_remove", kind: Function(Id { idx: 2 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 3 }, module: "env", name: "addr_validate", kind: Function(Id { idx: 3 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 4 }, module: "env", name: "addr_canonicalize", kind: Function(Id { idx: 4 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 5 }, module: "env", name: "addr_humanize", kind: Function(Id { idx: 5 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 6 }, module: "env", name: "secp256k1_verify", kind: Function(Id { idx: 6 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 7 }, module: "env", name: "secp256k1_recover_pubkey", kind: Function(Id { idx: 7 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 8 }, module: "env", name: "ed25519_verify", kind: Function(Id { idx: 8 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 9 }, module: "env", name: "ed25519_batch_verify", kind: Function(Id { idx: 9 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 10 }, module: "env", name: "debug", kind: Function(Id { idx: 10 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 11 }, module: "env", name: "secp256k1_sign", kind: Function(Id { idx: 11 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 12 }, module: "env", name: "ed25519_sign", kind: Function(Id { idx: 12 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 13 }, module: "env", name: "check_gas", kind: Function(Id { idx: 13 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 14 }, module: "env", name: "gas_evaporate", kind: Function(Id { idx: 14 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] import Import { id: Id { idx: 15 }, module: "env", name: "query_chain", kind: Function(Id { idx: 15 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 0 }, name: "memory", item: Memory(Id { idx: 0 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 1 }, name: "instantiate", item: Function(Id { idx: 192 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 2 }, name: "execute", item: Function(Id { idx: 194 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 3 }, name: "query", item: Function(Id { idx: 196 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 4 }, name: "rustsecp256k1_v0_1_1_context_create", item: Function(Id { idx: 240 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 5 }, name: "rustsecp256k1_v0_1_1_default_illegal_callback_fn", item: Function(Id { idx: 242 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 6 }, name: "rustsecp256k1_v0_1_1_default_error_callback_fn", item: Function(Id { idx: 244 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 7 }, name: "rustsecp256k1_v0_1_1_context_destroy", item: Function(Id { idx: 241 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 8 }, name: "rustsecp256k1_v0_8_1_context_create", item: Function(Id { idx: 319 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 9 }, name: "rustsecp256k1_v0_8_1_context_destroy", item: Function(Id { idx: 320 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 10 }, name: "rustsecp256k1_v0_8_1_default_illegal_callback_fn", item: Function(Id { idx: 321 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 11 }, name: "rustsecp256k1_v0_8_1_default_error_callback_fn", item: Function(Id { idx: 323 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 12 }, name: "interface_version_8", item: Function(Id { idx: 410 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 13 }, name: "allocate", item: Function(Id { idx: 411 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 14 }, name: "deallocate", item: Function(Id { idx: 412 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 15 }, name: "requires_stargate", item: Function(Id { idx: 410 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 16 }, name: "requires_random", item: Function(Id { idx: 410 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 17 }, name: "__data_end", item: Global(Id { idx: 3 }) }
TRACE [enclave_contract_engine::wasm3::module_cache] export Export { id: Id { idx: 18 }, name: "__heap_base", item: Global(Id { idx: 4 }) }
DEBUG [enclave_contract_engine::wasm3::module_cache] Found supported features: random
TRACE [enclave_contract_engine::wasm3::module_cache] updating cache
TRACE [enclave_contract_engine::wasm3::module_cache] storing code in cache
TRACE [enclave_contract_engine::wasm3::module_cache] returning built instance
DEBUG [enclave_contract_engine::wasm3] setting up runtime
DEBUG [enclave_contract_engine::wasm3] initialized environment
DEBUG [enclave_contract_engine::contract_operations] random is enabled by contract
DEBUG [enclave_contract_engine::contract_operations] Old random: Some(Binary([b4, a8, cb, a, 5, 29, b4, fe, d, c8, e5, 43, 5e, 99, 55, 91, 19, db, d6, 40, 6, f8, 3d, c8, 80, e6, d6, c2, 99, 26, 76, 99]))
TRACE [enclave_contract_engine::random] counter used to derive random for height 404: MsgCounter { height: 404, counter: 0 }
DEBUG [enclave_contract_engine::contract_operations] New random: Some(Binary([92, b9, e4, 52, 66, 53, c6, 92, 7, f6, 41, 67, 7b, 72, b1, 8d, 6b, f9, 3d, d1, 18, af, ba, a, 65, dd, 61, 7b, 17, d7, b7, 84]))
TRACE [enclave_contract_engine::random] counter incremented to: MsgCounter { height: 404, counter: 1 }
TRACE [enclave_contract_engine::wasm3] initialized runtime
TRACE [enclave_contract_engine::wasm3] parsed module
TRACE [enclave_contract_engine::wasm3] created instance
TRACE [enclave_contract_engine::wasm3] set gas limit
TRACE [enclave_contract_engine::wasm3] linked functions
DEBUG [enclave_contract_engine::wasm3] starting init, api version: V1
INFO  [enclave_contract_engine::wasm3] debug_print: "Contract was initialized by secret1ap26qrlp8mcq2pg6r47w43l0y8zkqm8a450s03"
DEBUG [enclave_contract_engine::wasm3::gas] external service used gas: 2000
DEBUG [enclave_contract_engine::wasm3] db_write writing key: "config" (636f6e666967), value: "-\0\0\0\0\0\0\0secret1mfk7n6mc2cg6lznujmeckdh4x0a5ezf6hx6y8q@\0\0\0\0\0\0\097653655266e70774ab8f0bf2ee2c17ff4a7f47d2e2fd477c69b52476841277bX\0\0\0\0\0\0\0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=*\0\0\0\0\0\0\00xAFFF311821C3F3AF863C7103BB17BDC1Ba04603D-\0\0\0\0\0\0\0secret1ap26qrlp8mcq2pg6r47w43l0y8zkqm8a450s03" (2d00000000000000736563726574316d666b376e366d63326367366c7a6e756a6d65636b64683478306135657a663668783679387140000000000000003937363533363535323636653730373734616238663062663265653263313766663461376634376432653266643437376336396235323437363834313237376258000000000000004141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141413d2a000000000000003078414646463331313832314333463341463836334337313033424231374244433142613034363033442d00000000000000736563726574316170323671726c70386d6371327067367234377734336c3079387a6b716d3861343530733033)
DEBUG [enclave_contract_engine::wasm3::gas] external service used gas: 1620000
DEBUG [enclave_contract_engine::wasm3::gas] external service used gas: 2000
DEBUG [enclave_contract_engine::wasm3] db_write writing key: "my_keys" (6d795f6b657973), value: "!\0\0\0\0\0\0\0\u{3}F�l\u{f}F��Z���_\u{13}��Hn�cE\u{7f}�韜L��\"n \0\0\0\0\0\0\0���RfSƒ\u{7}�Ag{r��k�=�\u{18}��\ne�a{\u{17}\u{5f7}�" (21000000000000000346bc6c0f46e0d55a868dcc5f13e1e5486ed663457feee99f9c4c8bf18a99226e200000000000000092b9e4526653c69207f641677b72b18d6bf93dd118afba0a65dd617b17d7b784)
DEBUG [enclave_contract_engine::wasm3::gas] external service used gas: 405000
TRACE [enclave_contract_engine::wasm3] function returned Ok([123, 34, 79, 107, 34, 58, 123, 34, 109, 101, 115, 115, 97, 103, 101, 115, 34, 58, 91, 93, 44, 34, 97, 116, 116, 114, 105, 98, 117, 116, 101, 115, 34, 58, 91, 93, 44, 34, 101, 118, 101, 110, 116, 115, 34, 58, 91, 93, 44, 34, 100, 97, 116, 97, 34, 58, 110, 117, 108, 108, 125, 125])
DEBUG [enclave_contract_engine::db] Removed old field name: [96, 227, 209, 210, 234, 133, 194, 34, 105, 162, 31, 6, 217, 36, 76, 89, 142, 86, 173, 252, 93, 115, 240, 140, 131, 175, 199, 158, 51, 203, 159, 162] and created new field name: [6, 0, 0, 0, 0, 0, 0, 0, 115, 101, 99, 114, 101, 116, 2, 0, 3, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 9, 187, 206, 191, 206, 143, 92, 79, 23, 146, 66, 19, 78, 149, 169, 164, 94, 59, 153, 12, 74, 209]
DEBUG [enclave_contract_engine::db] Removed old field name: [78, 51, 99, 206, 42, 241, 163, 37, 134, 109, 236, 138, 131, 201, 124, 107, 139, 73, 232, 86, 148, 142, 146, 139, 45, 134, 236, 58, 142, 2, 72, 163] and created new field name: [6, 0, 0, 0, 0, 0, 0, 0, 115, 101, 99, 114, 101, 116, 2, 0, 3, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 164, 250, 80, 81, 56, 243, 243, 22, 203, 16, 67, 221, 175, 43, 177, 40, 47, 42, 69, 49, 84, 131, 185]
TRACE [enclave_contract_engine::io] output as received from contract: "{\"Ok\":{\"messages\":[],\"attributes\":[],\"events\":[],\"data\":null}}"
TRACE [enclave_contract_engine::io] Output after deserialization: OkV1 { ok: Response { messages: [], attributes: [], events: [], data: None }, internal_reply_enclave_sig: None, internal_msg_id: None }
TRACE [enclave_contract_engine::io] message nonce and public key for encryption: [144, 17, 190, 63, 132, 224, 106, 249, 89, 249, 188, 223, 69, 83, 236, 177, 59, 130, 179, 182, 253, 70, 154, 168, 255, 59, 246, 217, 16, 160, 0, 197] [139, 200, 9, 176, 74, 21, 60, 91, 210, 35, 65, 201, 253, 178, 111, 55, 230, 1, 211, 0, 1, 245, 144, 252, 254, 210, 204, 71, 222, 88, 21, 76]
TRACE [enclave_contract_engine::io] WasmOutput: WasmOutput { v010: None, v1: Some(V1WasmOutput { ok: Some(Response { messages: [], attributes: [], events: [], data: None }), err: None }), ibc_basic: None, ibc_packet_receive: None, ibc_open_channel: None, query: None, internal_reply_enclave_sig: None, internal_msg_id: None }
1:51AM INF finalized block block_app_hash=5E6D759AB495616319E1C455C6695CE896A8C045BED3D663A9FB100DF8FE6B78 height=404 module=state num_txs_res=1 num_val_updates=0
1:51AM INF executed block app_hash=5E6D759AB495616319E1C455C6695CE896A8C045BED3D663A9FB100DF8FE6B78 height=404 module=state
1:51AM INF committed state block_app_hash=EB202C571B4B018F9423B726530AF23C1C7C84D52B04665485EE72C749B6F665 height=404 module=state
1:51AM INF indexed block events height=404 module=txindex
